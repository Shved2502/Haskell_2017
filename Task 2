-- Назовем “производной” элемента числового списка разность между следующим 
-- в списке и данным элементом. Производной последнего элемента будем считать 0. 
-- Например, список производных элементов списка [3,1,2,5,7,6] 
-- будет список [-2,1,3,2,-1,0]. 
-- Написать функцию maxDeriv :: Real a => [a] -> Int, 
-- которая в заданном списке числовых элементов находит индекс элемента 
-- с максимальной “производной”. Например, в вышеприведенном списке 
-- таким индексом будет 2, поскольку элемент с этим индексом имеет
--  максимальную производную - 3.

-- Идея такова : (tail (zipWith (-) [xs] [0:xs]) ++ [0]) - это список производных
-- Брался исходный список, добавлялся 0 в начало одного из них, происходит 
-- вычитание, первый элемент обрубается (поэтому tail), контатинируется 0
-- (производная последнего элемента) и получаем список производных
-- На втором этапе создаем пары (индексируем каждый элемент списка производных)
-- с помощью zip. Далее находим максимум для производных и берем его индекс при
-- помощи функции snd

maxDeriv :: Real a => [a] -> Int
maxDeriv xs = snd $ maximum (zip (tail (zipWith (-) (xs) ((head xs):xs)) ++ [(head xs)-(head xs)])  [0..])
